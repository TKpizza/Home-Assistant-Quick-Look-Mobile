climate:
  variables:
    entity:
    name:
    label: 
  show_icon: false
  show_name: false
  triggers_update: all
  styles:
      card:
        - height: 10.8vh
        - border-radius: 27px
        - cursor: none
        - --mdc-ripple-press-opacity: 0
        - box-shadow: none
        - background-color:  |
            [[[
              if (variables.entity && (states[variables.entity].state === 'heat' )) {
                return '#FEE5C9';
              } else {
                return '#ECEFF6';
              }
            ]]]
  custom_fields:
    buttons:
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card # ICON
            entity: '[[[ return variables.entity ]]]'
            show_icon: |
              [[[
                if (variables.entity) {
                  if (states[variables.entity].state === 'heat' ) {
                    return false;
                  } else {
                    return true;
                  }
                } else {
                  return true;
                }
              ]]]
            icon:  |
              [[[                  
                if (variables.entity) {
                  return 'mdi:thermometer';
                } else {
                  return 'mdi:help';
                }
              ]]]
            size: 50%
            show_name: |
              [[[
                if (variables.entity) {
                  if (states[variables.entity].state === 'heat' ) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              ]]]
            name: |
              [[[
                if (variables.entity) {
                  if (states[variables.entity].state === 'heat' ) {
                    return states[variables.entity].attributes.temperature + '°';
                  } else {
                    return '';
                  } 
                } else {
                  return '';
                }
              ]]]
            styles:
              card:
                - height: 6vh
                - width: 6vh
                - background-color: |
                    [[[
                      if (variables.entity && (states[variables.entity].state === 'heat' || states[variables.entity].state === 'cleaning')) {
                        return '#FFBB6E';
                    } else {
                        return '#D9D6D6';
                    }
                    ]]]
                - border-radius: 50%
                - box-shadow: none
                - top: 1.6vh
                - left: 3.2vw
                - cursor: none 
                - --mdc-ripple-press-opacity: 0 
              icon:
                - color: '#F3F6FD'
              name:
                - color: |
                    [[[
                      if (variables.entity && (states[variables.entity].state === 'heat' || states[variables.entity].state === 'cleaning')) {
                        return '#FFF6DF';
                    } else {
                        return '#FAFBFF';
                    }
                    ]]]
                - font-size: 14px
                - font-weight: 800
            tap_action:
              action: call-service
              service:  |
                [[[
                  if (variables.entity && states[variables.entity].state == 'off') {
                  return 'climate.turn_on';
                  } 
                  return 'climate.turn_off';
                ]]]
              service_data:
                entity_id: '[[[ return variables.entity ]]]'
          - type: custom:button-card # NAME
            entity: '[[[ return variables.entity ]]]'
            name:   |
              [[[
                if (variables.name) {
                  return variables.name;
                } else if (variables.entity) {
                    return states[variables.entity].attributes.friendly_name;
                } else {
                    return 'Name';
                }
              ]]]
            label:  |
              [[[
                if (variables.entity) {
                  if (variables.label) {
                    return variables.label;
                  } else {
                      let temperature;
                      if (states[variables.entity].attributes.current_temperature) {
                          temperature = states[variables.entity].attributes.current_temperature;
                      } else if (states[variables.entity].attributes.device_class === 'temperature' ) {
                          temperature = states[variables.entity].state;
                            } if (temperature) {
                              return parseFloat(temperature).toFixed(1) + ' °C';
                      } else {
                        return 'Unavailable';
                      }
                  }
                } else {
                  return "empty";
                }
              ]]]
            show_icon: false
            show_label: true
            styles:
              card:
                - height: 10.8vh
                - width: 29.2vw
                - background-color: transparent
                - border-radius: 0%
                - box-shadow: none
                - top: -0.85vh
                - left: 1.0vw
                - cursor: none
                - --mdc-ripple-press-opacity: 0
              name: 
                - font-size: 14px
                - font-weight: 500
                - justify-self: start
                - padding-left: 4vw
              label: 
                - font-size: 12px
                - font-weight: 400
                - justify-self: start
                - padding-left: 4vw
                - padding-top: 0.5vh
